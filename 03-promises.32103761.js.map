{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,QAClBD,SAASC,cAAc,gBAqBzC,IAAMC,EAAgB,SAACC,EAAUC,IAhBjC,SAAuBD,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAKLQ,CAAcT,EAAUC,GACrBS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACjBa,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MAClBa,EAAApB,GAASqB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,KAgBzEjB,EAAKwB,iBAAiB,UAZH,SAAAC,GACjBA,EAAMC,iBAIN,IAHA,IAAMC,EAAaC,OAAO5B,EAAK6B,SAASxB,MAAMyB,OACxCC,EAAYH,OAAO5B,EAAK6B,SAASG,KAAKF,OAEnCG,EAAI,EAAGA,EAAIjC,EAAK6B,SAASK,OAAOJ,MAAOG,IAG9C9B,EAFgB8B,EAAI,EACLN,EAAaI,EAAYE,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst btnCreate = document.querySelector('.form button');\n\nlet promiseNumber = 1;\nlet delayPromise = 0;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst renderMessage = (position, delay) => {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\nconst btnHandler = event => {\n  event.preventDefault();\n  const delayValue = Number(form.elements.delay.value);\n  const stepValue = Number(form.elements.step.value);\n\n  for (let i = 0; i < form.elements.amount.value; i++) {\n    promiseNumber = i + 1;\n    delayPromise = delayValue + stepValue * i;\n    renderMessage(promiseNumber, delayPromise);\n  }\n};\n\nform.addEventListener('submit', btnHandler);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$renderMessage","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","delayValue","Number","elements","value","stepValue","step","i","amount"],"version":3,"file":"03-promises.32103761.js.map"}