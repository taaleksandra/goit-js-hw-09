{"mappings":"gfAAAA,EAAA,SAIaC,SAASC,cAAc,QAClBD,SAASC,cAAc,S","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst btnCreate = document.querySelector('button');\n\n// let promiseNumber = 1;\n// let data = {\n//   position: '',\n//   delay: '',\n// };\nlet timerId = null;\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  new Promise((resolve, reject) => {\n    data = {\n      position: position,\n      delay: delay,\n    };\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n\nconst renderMessage = ({ position, delay }) => {\n  createPromise({ position, delay })\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\nconst btnHandler = event => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = form;\n  for (let i = 0; i < amount.value; i++) {\n    const promiseNumber = i + 1;\n    renderMessage({ promiseNumber, delay });\n  }\n};\n"],"names":["parcelRequire","document","querySelector"],"version":3,"file":"03-promises.35b0386a.js.map"}